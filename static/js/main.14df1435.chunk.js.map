{"version":3,"sources":["pages/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage/PeoplePage.tsx","components/Navigation/Navigation.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","people","setPeople","loading","setLoading","error","setError","useEffect","map","person","mother","find","pers","name","motherName","father","fatherName","preparePeople","catch","finally","slug","useParams","length","classNames","sex","to","born","died","getLinkClass","isActive","Navigation","role","App","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.14df1435.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\n\nconst preparePeople = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(pers => pers.name === person.motherName);\n    const father = people.find(pers => pers.name === person.fatherName);\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then((response) => {\n        setPeople(preparePeople(response));\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const { slug } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && (\n            <Loader />\n          )}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!loading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <Link\n                        className={classNames({\n                          'has-text-danger': person.sex === 'f',\n                        })}\n                        to={`../${person.slug}`}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n\n                    <td>\n                      {person.mother ? (\n                        <Link\n                          className=\"has-text-danger\"\n                          to={`../${person.mother.slug}`}\n                        >\n                          {person.motherName}\n                        </Link>\n                      ) : (\n                        person.motherName || '-'\n                      )}\n                    </td>\n\n                    <td>\n                      {person.father ? (\n                        <Link to={`../${person.father.slug}`}>\n                          {person.fatherName}\n                        </Link>\n                      ) : (\n                        person.fatherName || '-'\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { App } from './App';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route\n          path=\"*\"\n          element={\n            <h1 className=\"title\">Page not found</h1>\n          }\n        />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}